{"version":3,"sources":["components/Expenses/ExpenseDate.js","components/UI/Card.js","components/Expenses/ExpenseItem.js","components/Expenses/ExpensesList.js","components/Expenses/ExpensesFilter.js","components/Chart/ChartBar.jsx","components/Chart/Chart.jsx","components/Expenses/ExpensesChart.jsx","components/Expenses/Expenses.js","components/NewExpense/ExpenseForm.js","components/NewExpense/NewExpense.js","App.js","index.js"],"names":["ExpenseDate","props","month","date","toLocaleString","day","year","getFullYear","className","Card","classes","children","ExpenseItem","title","setTitle","useState","amount","onClick","ExpensesList","items","length","map","expense","id","ExpensesFilter","value","selected","onChange","event","onChangeFilter","target","ChartBar","barFillHeight","maxValue","Math","round","style","height","label","Chart","dataPointValues","dataPoints","dataPoint","totalMaximum","max","ExpensesChart","chartDataPoints","expenses","getMonth","Expenses","Date","filteredYear","setFilteredYear","filteredExpenses","filter","Number","selectedYear","ExpenseForm","enteredTitle","setEnteredTitle","enteredAmount","setEnteredAmount","enteredDate","setEnteredDate","onSubmit","preventDefault","expenseData","onSaveExpenseData","type","min","step","onCancel","NewExpense","isEditing","setIsEditing","enteredExpenseData","random","toString","onAddExpense","DUMMY_EXPENSES","App","setExpenses","prevExpenses","rootElement","document","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.1c60421f.chunk.js","sourcesContent":["import \"./ExpenseDate.css\";\r\n\r\nconst ExpenseDate = (props) => {\r\n  const month = props.date.toLocaleString(\"en-US\", { month: \"long\" });\r\n  const day = props.date.toLocaleString(\"en-US\", { day: \"2-digit\" });\r\n  const year = props.date.getFullYear();\r\n\r\n  return (\r\n    <div className=\"expense-date\">\r\n      <div className=\"expense-date__month\">{month}</div>\r\n      <div className=\"expense-date__year\">{year}</div>\r\n      <div className=\"expense-date__day\">{day}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExpenseDate;\r\n","import \"./Card.css\";\r\nconst Card = (props) => {\r\n  const classes = \"card \" + props.className;\r\n  return <div className={classes}>{props.children}</div>;\r\n};\r\n\r\nexport default Card;\r\n","import React, { useState } from \"react\";\r\nimport ExpenseDate from \"./ExpenseDate\";\r\nimport Card from \"../UI/Card\";\r\nimport \"./ExpenseItem.css\";\r\n\r\nconst ExpenseItem = (props) => {\r\n  const [title, setTitle] = useState(props.title);\r\n\r\n  const clickHandler = () => {\r\n    setTitle(\"updated\");\r\n  };\r\n\r\n  return (\r\n    <li>\r\n      <Card className=\"expense-item\">\r\n        <ExpenseDate date={props.date} />\r\n        <div className=\"expense-item__description\">\r\n          <h2>{title}</h2>\r\n          <div className=\"expense-item__price\">${props.amount}</div>\r\n          <button onClick={clickHandler}>change title</button>\r\n        </div>\r\n      </Card>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default ExpenseItem;\r\n","import \"./ExpensesList.css\";\r\nimport ExpenseItem from \"./ExpenseItem\";\r\n\r\nconst ExpensesList = (props) => {\r\n  if (props.items.length === 0) {\r\n    return (\r\n      <h4 className=\"expenses-list__fallback\">\r\n        <span>ü§≠</span> Oops! No expenses found\r\n      </h4>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <ul className=\"expenses-list\">\r\n      {props.items.map((expense) => (\r\n        <ExpenseItem\r\n          key={expense.id}\r\n          title={expense.title}\r\n          amount={expense.amount}\r\n          date={expense.date}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default ExpensesList;\r\n","import React from \"react\";\r\n\r\nimport \"./ExpensesFilter.css\";\r\n\r\nconst ExpensesFilter = (props) => {\r\n  const dropdownChangehandler = (event) => {\r\n    props.onChangeFilter(event.target.value);\r\n  };\r\n  return (\r\n    <div className=\"expenses-filter\">\r\n      <div className=\"expenses-filter__control\">\r\n        <label>\r\n          <span>‚è≥</span> Filter by year\r\n        </label>\r\n        <select value={props.selected} onChange={dropdownChangehandler}>\r\n          <option value=\"2022\">2022</option>\r\n          <option value=\"2021\">2021</option>\r\n          <option value=\"2020\">2020</option>\r\n          <option value=\"2019\">2019</option>\r\n        </select>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExpensesFilter;\r\n","import \"./ChartBar.css\";\r\n\r\nconst ChartBar = (props) => {\r\n  let barFillHeight = \"0%\";\r\n  if (props.maxValue > 0) {\r\n    barFillHeight = Math.round((props.value / props.maxValue) * 100);\r\n  }\r\n  return (\r\n    <div className=\"chart-bar\">\r\n      <div className=\"chart-bar__inner\">\r\n        <div\r\n          className=\"chart-bar__fill\"\r\n          style={{ height: barFillHeight }}\r\n        ></div>\r\n      </div>\r\n      <div className=\"chart-bar__label\">{props.label}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChartBar;\r\n","import ChartBar from \"./ChartBar\";\r\nimport \"./Chart.css\";\r\n\r\nconst Chart = (props) => {\r\n  const dataPointValues = props.dataPoints.map((dataPoint) => dataPoint.value);\r\n  const totalMaximum = Math.max(...dataPointValues);\r\n  return (\r\n    <div className=\"chart\">\r\n      {props.dataPoints.map((dataPoint) => (\r\n        <ChartBar\r\n          key={dataPoint.label}\r\n          value={dataPoint.value}\r\n          maxValue={totalMaximum}\r\n          label={dataPoint.label}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chart;\r\n","import Chart from \"../Chart/Chart\";\r\n\r\nconst ExpensesChart = (props) => {\r\n  const chartDataPoints = [\r\n    { label: \"Jan\", value: 0 },\r\n    { label: \"Feb\", value: 0 },\r\n    { label: \"Mar\", value: 0 },\r\n    { label: \"Apr\", value: 0 },\r\n    { label: \"May\", value: 0 },\r\n    { label: \"Jun\", value: 0 },\r\n    { label: \"Jul\", value: 0 },\r\n    { label: \"Aug\", value: 0 },\r\n    { label: \"Sep\", value: 0 },\r\n    { label: \"Oct\", value: 0 },\r\n    { label: \"Nov\", value: 0 },\r\n    { label: \"dec\", value: 0 }\r\n  ];\r\n\r\n  for (const expense of props.expenses) {\r\n    const expenseMonth = expense.date.getMonth();\r\n    chartDataPoints[expenseMonth].value += expense.amount;\r\n  }\r\n  return <Chart dataPoints={chartDataPoints} />;\r\n};\r\n\r\nexport default ExpensesChart;\r\n","import ExpensesList from \"./ExpensesList\";\r\nimport ExpensesFilter from \"./ExpensesFilter\";\r\nimport ExpensesChart from \"./ExpensesChart\";\r\nimport Card from \"../UI/Card\";\r\nimport \"./Expenses.css\";\r\nimport { useState } from \"react\";\r\n\r\nconst Expenses = (props) => {\r\n  const date = new Date();\r\n  const year = date.getFullYear();\r\n  const [filteredYear, setFilteredYear] = useState(year);\r\n  const filterChangeHandler = (selectedYear) => {\r\n    setFilteredYear(selectedYear);\r\n  };\r\n\r\n  const filteredExpenses = props.items.filter((expense) => {\r\n    // let abc = expense.date.getFullYear();\r\n    // console.log(typeof abc);\r\n    // console.log(typeof filteredYear);\r\n    return expense.date.getFullYear() === Number(filteredYear);\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      <Card className=\"expenses\">\r\n        <ExpensesFilter\r\n          selected={filteredYear}\r\n          onChangeFilter={filterChangeHandler}\r\n        />\r\n        <ExpensesChart expenses={filteredExpenses} />\r\n        <ExpensesList items={filteredExpenses} />\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Expenses;\r\n","import { useState } from \"react\";\r\nimport \"./ExpenseForm.css\";\r\n\r\nconst ExpenseForm = (props) => {\r\n  const [enteredTitle, setEnteredTitle] = useState(\"\");\r\n  const [enteredAmount, setEnteredAmount] = useState(\"\");\r\n  const [enteredDate, setEnteredDate] = useState(\"\");\r\n\r\n  // const [userInput, setUserInput] = useState({\r\n  //   enteredTitle: \"\",\r\n  //   enteredAmount: \"\",\r\n  //   enteredDate: \"\"\r\n  // });\r\n\r\n  const titleChangeHandler = (event) => {\r\n    setEnteredTitle(event.target.value);\r\n    // setUserInput({\r\n    //   ...userInput,\r\n    //   enteredTitle: event.target.value\r\n    // });\r\n    // setUserInput((prevState) => {\r\n    //   return {\r\n    //     ...prevState,\r\n    //     enteredDate: event.target.value\r\n    //   };\r\n    // });\r\n  };\r\n\r\n  const amountChangeHandler = (event) => {\r\n    setEnteredAmount(event.target.value);\r\n    // setUserInput({\r\n    //   ...userInput,\r\n    //   enteredAmount: event.target.value\r\n    // });\r\n  };\r\n\r\n  const dateChangeHandler = (event) => {\r\n    setEnteredDate(event.target.value);\r\n    // setUserInput({\r\n    //   ...userInput,\r\n    //   enteredDate: event.target.value\r\n    // });\r\n  };\r\n\r\n  const submitHandler = (event) => {\r\n    event.preventDefault();\r\n    const expenseData = {\r\n      title: enteredTitle,\r\n      amount: +enteredAmount,\r\n      date: new Date(enteredDate)\r\n    };\r\n    props.onSaveExpenseData(expenseData);\r\n    setEnteredTitle(\"\");\r\n    setEnteredAmount(\"\");\r\n    setEnteredDate(\"\");\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={submitHandler}>\r\n      <div className=\"new-expense__controls\">\r\n        <div className=\"new-expense__control\">\r\n          <label>Title</label>\r\n          <input\r\n            type=\"text\"\r\n            value={enteredTitle}\r\n            onChange={titleChangeHandler}\r\n          />\r\n        </div>\r\n        <div className=\"new-expense__control\">\r\n          <label>Amount</label>\r\n          <input\r\n            type=\"number\"\r\n            min=\"0.01\"\r\n            step=\"0.01\"\r\n            value={enteredAmount}\r\n            onChange={amountChangeHandler}\r\n          />\r\n        </div>\r\n        <div className=\"new-expense__control\">\r\n          <label>Date</label>\r\n          <input\r\n            type=\"date\"\r\n            min=\"2019-01-01\"\r\n            step=\"2022-12-31\"\r\n            value={enteredDate}\r\n            onChange={dateChangeHandler}\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className=\"new-expense__actions\">\r\n        <button type=\"button\" onClick={props.onCancel}>\r\n          <span>‚ùå</span> Cancel\r\n        </button>\r\n        <button type=\"submit\">\r\n          <span>‚ûï</span> Add Expense\r\n        </button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default ExpenseForm;\r\n","import \"./NewExpense.css\";\r\nimport ExpenseForm from \"./ExpenseForm\";\r\nimport { useState } from \"react\";\r\n\r\nconst NewExpense = (props) => {\r\n  const [isEditing, setIsEditing] = useState(false);\r\n  const saveExpenseDataHandler = (enteredExpenseData) => {\r\n    const expenseData = {\r\n      ...enteredExpenseData,\r\n      id: Math.random().toString()\r\n    };\r\n    props.onAddExpense(expenseData);\r\n  };\r\n\r\n  const startEditingHandler = () => {\r\n    setIsEditing(true);\r\n  };\r\n\r\n  const stopEditinghandler = () => {\r\n    setIsEditing(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"new-expense\">\r\n      {!isEditing && (\r\n        <button onClick={startEditingHandler}>Add New Expenses</button>\r\n      )}\r\n      {isEditing && (\r\n        <ExpenseForm\r\n          onSaveExpenseData={saveExpenseDataHandler}\r\n          onCancel={stopEditinghandler}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewExpense;\r\n","import { useState } from \"react\";\nimport Expenses from \"./components/Expenses/Expenses\";\nimport NewExpense from \"./components/NewExpense/NewExpense\";\n\nconst DUMMY_EXPENSES = [\n  {\n    id: \"e1\",\n    title: \"Toilet Paper\",\n    amount: 94.12,\n    date: new Date(2020, 7, 14)\n  },\n  { id: \"e2\", title: \"New TV\", amount: 799.49, date: new Date(2021, 2, 12) },\n  {\n    id: \"e3\",\n    title: \"Car Insurance\",\n    amount: 294.67,\n    date: new Date(2021, 2, 28)\n  },\n  {\n    id: \"e4\",\n    title: \"New Desk (Wooden)\",\n    amount: 450,\n    date: new Date(2021, 5, 12)\n  }\n];\n\nconst App = () => {\n  const [expenses, setExpenses] = useState(DUMMY_EXPENSES);\n\n  const addExpenseHandler = (expense) => {\n    setExpenses((prevExpenses) => {\n      return [expense, ...prevExpenses];\n    });\n  };\n\n  return (\n    <div>\n      <NewExpense onAddExpense={addExpenseHandler} />\n\n      <Expenses items={expenses} />\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\nimport \"./index.css\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<App />, rootElement);\n"],"sourceRoot":""}